(() (interface Stack (INDENT (type T) (prop top : T ?) (def push (T)) (def pop () : T ?))) (class StackImpl implements Stack (INDENT (var list : T Link ?) (def top = list . data) (def push (x) (INDENT (list = Link (x , link)))) (def pop () (INDENT (val result = list . data) (list = list . next) (result))))) (class Link (INDENT (type T) (val data : T) (val next : T Link ?))))